<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog cá nhân - Trần Hữu Nhật</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on Blog cá nhân - Trần Hữu Nhật</description>
    <generator>Hugo</generator>
    <language>vi</language>
    <lastBuildDate>Wed, 22 Oct 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Bài 9 - Ứng dụng thực tế của lập trình mạng: Chat App, File Transfer, Network Monitor</title>
      <link>http://localhost:1313/blog/bai-9/</link>
      <pubDate>Wed, 22 Oct 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/bai-9/</guid>
      <description>&lt;h2 id=&#34;1-giới-thiệu&#34;&gt;1. Giới thiệu&lt;/h2&gt;&#xA;&lt;p&gt;Lập trình mạng không chỉ là lý thuyết về mô hình OSI hay giao thức TCP/IP, mà còn là nền tảng để phát triển các &lt;strong&gt;ứng dụng thực tế&lt;/strong&gt; trong đời sống và doanh nghiệp.&lt;br&gt;&#xA;Ba ứng dụng tiêu biểu thể hiện sức mạnh của lập trình mạng gồm:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Chat App (Ứng dụng trò chuyện thời gian thực)&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;File Transfer (Truyền tệp giữa các máy)&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Network Monitor (Giám sát và phân tích mạng)&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Những ứng dụng này đều dựa trên nguyên lý &lt;strong&gt;client - server&lt;/strong&gt;, &lt;strong&gt;socket&lt;/strong&gt; và &lt;strong&gt;truyền dữ liệu qua giao thức mạng&lt;/strong&gt; (TCP hoặc UDP).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Bài 8 - Bảo mật mạng trong lập trình (SSL/TLS, mã hóa)</title>
      <link>http://localhost:1313/blog/bai-8/</link>
      <pubDate>Tue, 21 Oct 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/bai-8/</guid>
      <description>&lt;h2 id=&#34;1-giới-thiệu&#34;&gt;1. Giới thiệu&lt;/h2&gt;&#xA;&lt;p&gt;Trong lập trình mạng, &lt;strong&gt;bảo mật&lt;/strong&gt; là yếu tố then chốt giúp đảm bảo:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Tính bí mật (Confidentiality):&lt;/strong&gt; Dữ liệu không bị đọc lén.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Tính toàn vẹn (Integrity):&lt;/strong&gt; Dữ liệu không bị thay đổi.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Xác thực (Authentication):&lt;/strong&gt; Đảm bảo danh tính của các bên giao tiếp.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Không chối bỏ (Non-repudiation):&lt;/strong&gt; Người gửi không thể phủ nhận đã gửi dữ liệu.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Các cơ chế phổ biến:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;SSL/TLS&lt;/strong&gt;: Bảo mật đường truyền.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Mã hóa (Encryption)&lt;/strong&gt;: Bảo vệ dữ liệu.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Chữ ký số (Digital Signature)&lt;/strong&gt; và &lt;strong&gt;Chứng chỉ số (Certificate)&lt;/strong&gt;: Xác thực danh tính.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;2-ssltls-là-gì&#34;&gt;2. SSL/TLS là gì?&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;SSL (Secure Socket Layer)&lt;/strong&gt; và &lt;strong&gt;TLS (Transport Layer Security)&lt;/strong&gt; là giao thức mã hóa cho phép truyền dữ liệu an toàn giữa client và server qua Internet.&lt;br&gt;&#xA;TLS là phiên bản nâng cấp và bảo mật hơn của SSL.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Bài 1 - Giới thiệu lập trình mạng và mô hình OSI</title>
      <link>http://localhost:1313/blog/bai-1/</link>
      <pubDate>Mon, 20 Oct 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/bai-1/</guid>
      <description>&lt;h2 id=&#34;1-lập-trình-mạng-là-gì&#34;&gt;1. Lập trình mạng là gì&lt;/h2&gt;&#xA;&lt;p&gt;Lập trình mạng là lĩnh vực giúp máy tính có thể giao tiếp với nhau thông qua kết nối mạng.&lt;br&gt;&#xA;Các chương trình mạng thường có hai thành phần chính:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Client&lt;/strong&gt;: là bên gửi yêu cầu (ví dụ: trình duyệt web, ứng dụng chat).&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Server&lt;/strong&gt;: là bên nhận yêu cầu và gửi phản hồi (ví dụ: máy chủ web, máy chủ game).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Lập trình mạng giúp ta:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Bài 2 - Làm việc với Socket trong Java, Python và C#</title>
      <link>http://localhost:1313/blog/bai-2/</link>
      <pubDate>Mon, 20 Oct 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/bai-2/</guid>
      <description>&lt;h2 id=&#34;1-giới-thiệu-về-socket&#34;&gt;1. Giới thiệu về Socket&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;Socket&lt;/strong&gt; là giao diện lập trình mạng cho phép hai tiến trình (process) giao tiếp qua mạng.&lt;br&gt;&#xA;Socket hoạt động như một &lt;strong&gt;điểm cuối&lt;/strong&gt; (endpoint) của kênh truyền dữ liệu giữa client và server.&lt;/p&gt;&#xA;&lt;p&gt;Có hai loại socket phổ biến:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;TCP (Transmission Control Protocol):&lt;/strong&gt; Đảm bảo truyền dữ liệu tin cậy, có kiểm tra lỗi.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;UDP (User Datagram Protocol):&lt;/strong&gt; Truyền dữ liệu nhanh hơn nhưng không đảm bảo.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;2-socket-trong-java&#34;&gt;2. Socket trong Java&lt;/h2&gt;&#xA;&lt;h3 id=&#34;tạo-server-tcp&#34;&gt;Tạo Server TCP&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; java.io.*;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; java.net.*;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Server&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(String&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; args) &lt;span style=&#34;color:#66d9ef&#34;&gt;throws&lt;/span&gt; IOException {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ServerSocket server &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; ServerSocket(1234);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        System.&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Server đang chờ kết nối...&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Socket socket &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; server.&lt;span style=&#34;color:#a6e22e&#34;&gt;accept&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        System.&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Client đã kết nối!&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        BufferedReader in &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; BufferedReader(&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; InputStreamReader(socket.&lt;span style=&#34;color:#a6e22e&#34;&gt;getInputStream&lt;/span&gt;()));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        PrintWriter out &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; PrintWriter(socket.&lt;span style=&#34;color:#a6e22e&#34;&gt;getOutputStream&lt;/span&gt;(), &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        String message &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; in.&lt;span style=&#34;color:#a6e22e&#34;&gt;readLine&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        System.&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Client: &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; message);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        out.&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Xin chào từ Server!&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        socket.&lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        server.&lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;tạo-client-tcp&#34;&gt;Tạo Client TCP&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; java.io.*;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; java.net.*;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Client&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(String&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; args) &lt;span style=&#34;color:#66d9ef&#34;&gt;throws&lt;/span&gt; IOException {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Socket socket &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Socket(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;localhost&amp;#34;&lt;/span&gt;, 1234);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        BufferedReader in &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; BufferedReader(&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; InputStreamReader(socket.&lt;span style=&#34;color:#a6e22e&#34;&gt;getInputStream&lt;/span&gt;()));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        PrintWriter out &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; PrintWriter(socket.&lt;span style=&#34;color:#a6e22e&#34;&gt;getOutputStream&lt;/span&gt;(), &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        out.&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello Server!&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        System.&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Server: &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; in.&lt;span style=&#34;color:#a6e22e&#34;&gt;readLine&lt;/span&gt;());&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        socket.&lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;&#xA;&lt;h2 id=&#34;3-socket-trong-python&#34;&gt;3. Socket trong Python&lt;/h2&gt;&#xA;&lt;h3 id=&#34;tạo-server-tcp-1&#34;&gt;Tạo Server TCP&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; socket&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;server &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; socket&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;socket(socket&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;AF_INET, socket&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;SOCK_STREAM)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;server&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;bind((&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;localhost&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1234&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;server&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;listen(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Server đang chờ kết nối...&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;conn, addr &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; server&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;accept()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Kết nối từ &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;addr&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; conn&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;recv(&lt;span style=&#34;color:#ae81ff&#34;&gt;1024&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;decode()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Client:&amp;#34;&lt;/span&gt;, data)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;conn&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sendall(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Xin chào từ Server!&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;encode())&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;conn&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;close()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;server&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;close()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;tạo-client-tcp-1&#34;&gt;Tạo Client TCP&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; socket&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;client &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; socket&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;socket(socket&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;AF_INET, socket&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;SOCK_STREAM)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;client&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;connect((&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;localhost&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1234&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;client&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sendall(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello Server!&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;encode())&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Server:&amp;#34;&lt;/span&gt;, client&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;recv(&lt;span style=&#34;color:#ae81ff&#34;&gt;1024&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;decode())&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;client&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;close()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;&#xA;&lt;h2 id=&#34;4-socket-trong-c&#34;&gt;4. Socket trong C#&lt;/h2&gt;&#xA;&lt;h3 id=&#34;server-tcp&#34;&gt;Server TCP&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; System;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; System.Net;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; System.Net.Sockets;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; System.Text;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Server&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; Main() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        TcpListener server = &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; TcpListener(IPAddress.Any, &lt;span style=&#34;color:#ae81ff&#34;&gt;1234&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        server.Start();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Console.WriteLine(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Server đang chờ kết nối...&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        TcpClient client = server.AcceptTcpClient();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        NetworkStream stream = client.GetStream();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;byte&lt;/span&gt;[] buffer = &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;byte&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;1024&lt;/span&gt;];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; bytesRead = stream.Read(buffer, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, buffer.Length);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt; message = Encoding.UTF8.GetString(buffer, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, bytesRead);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Console.WriteLine(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Client: &amp;#34;&lt;/span&gt; + message);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;byte&lt;/span&gt;[] reply = Encoding.UTF8.GetBytes(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Xin chào từ Server!&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        stream.Write(reply, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, reply.Length);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        client.Close();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        server.Stop();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;client-tcp&#34;&gt;Client TCP&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; System;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; System.Net.Sockets;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; System.Text;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Client&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; Main() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        TcpClient client = &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; TcpClient(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;localhost&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1234&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        NetworkStream stream = client.GetStream();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;byte&lt;/span&gt;[] data = Encoding.UTF8.GetBytes(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello Server!&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        stream.Write(data, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, data.Length);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;byte&lt;/span&gt;[] buffer = &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;byte&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;1024&lt;/span&gt;];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; bytesRead = stream.Read(buffer, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, buffer.Length);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Console.WriteLine(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Server: &amp;#34;&lt;/span&gt; + Encoding.UTF8.GetString(buffer, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, bytesRead));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        client.Close();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;&#xA;&lt;h2 id=&#34;5-tổng-kết&#34;&gt;5. Tổng kết&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Ngôn ngữ&lt;/th&gt;&#xA;          &lt;th&gt;Lớp chính&lt;/th&gt;&#xA;          &lt;th&gt;Ghi chú&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Java&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;Socket&lt;/code&gt;, &lt;code&gt;ServerSocket&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Cần đóng socket sau khi dùng&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Python&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;socket.socket&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Dễ dùng, hỗ trợ cả TCP/UDP&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;C#&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;TcpClient&lt;/code&gt;, &lt;code&gt;TcpListener&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Có hỗ trợ bất đồng bộ (async/await)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;Socket là nền tảng của các ứng dụng mạng như &lt;strong&gt;chat, game online, IoT&lt;/strong&gt;.&lt;br&gt;&#xA;Hiểu được socket là bước đầu để xây dựng các hệ thống &lt;strong&gt;client-server&lt;/strong&gt; hiệu quả.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Bài 3 - TCP Socket – Giao tiếp có kết nối (Reliable Communication)</title>
      <link>http://localhost:1313/blog/bai-3/</link>
      <pubDate>Mon, 20 Oct 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/bai-3/</guid>
      <description>&lt;h2 id=&#34;1-giới-thiệu-về-tcp-socket&#34;&gt;1. Giới thiệu về TCP Socket&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;TCP (Transmission Control Protocol)&lt;/strong&gt; là giao thức truyền dữ liệu có kết nối, đảm bảo thông tin được gửi đến đúng đích và theo đúng thứ tự.&lt;br&gt;&#xA;Trong lập trình mạng, &lt;strong&gt;TCP Socket&lt;/strong&gt; được sử dụng để thiết lập kết nối giữa &lt;strong&gt;client&lt;/strong&gt; và &lt;strong&gt;server&lt;/strong&gt; nhằm trao đổi dữ liệu một cách tin cậy.&lt;/p&gt;&#xA;&lt;p&gt;Mỗi kết nối TCP gồm:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Địa chỉ IP&lt;/strong&gt;: xác định thiết bị trong mạng.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Cổng (Port)&lt;/strong&gt;: xác định ứng dụng hoặc dịch vụ cụ thể.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Socket&lt;/strong&gt;: kết hợp giữa IP và port → tạo điểm cuối giao tiếp (endpoint).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Ví dụ:&lt;br&gt;&#xA;&lt;code&gt;192.168.1.10:8080&lt;/code&gt; là một socket.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Bài 4 - UDP Socket – Giao tiếp không kết nối (Connectionless Communication)</title>
      <link>http://localhost:1313/blog/bai-4/</link>
      <pubDate>Mon, 20 Oct 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/bai-4/</guid>
      <description>&lt;h2 id=&#34;1-giới-thiệu-về-udp-socket&#34;&gt;1. Giới thiệu về UDP Socket&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;UDP (User Datagram Protocol)&lt;/strong&gt; là giao thức truyền dữ liệu &lt;strong&gt;không kết nối (connectionless)&lt;/strong&gt;, cho phép gửi và nhận dữ liệu nhanh chóng mà không cần thiết lập hay duy trì phiên kết nối giữa &lt;strong&gt;client&lt;/strong&gt; và &lt;strong&gt;server&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Trong lập trình mạng, &lt;strong&gt;UDP Socket&lt;/strong&gt; được dùng khi ta cần &lt;strong&gt;tốc độ cao hơn độ tin cậy tuyệt đối&lt;/strong&gt; – ví dụ như truyền video, âm thanh, hoặc dữ liệu game thời gian thực.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Bài 5 - Đa luồng (Multithreading) trong lập trình mạng</title>
      <link>http://localhost:1313/blog/bai-5/</link>
      <pubDate>Mon, 20 Oct 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/bai-5/</guid>
      <description>&lt;h2 id=&#34;1-giới-thiệu-về-đa-luồng-trong-lập-trình-mạng&#34;&gt;1. Giới thiệu về đa luồng trong lập trình mạng&lt;/h2&gt;&#xA;&lt;p&gt;Trong lập trình mạng, &lt;strong&gt;đa luồng (Multithreading)&lt;/strong&gt; cho phép chương trình xử lý &lt;strong&gt;nhiều kết nối cùng lúc&lt;/strong&gt;, giúp &lt;strong&gt;tăng hiệu năng&lt;/strong&gt; và &lt;strong&gt;độ phản hồi&lt;/strong&gt; của server.&lt;br&gt;&#xA;Một &lt;strong&gt;server đơn luồng (single-threaded)&lt;/strong&gt; chỉ có thể phục vụ &lt;strong&gt;một client tại một thời điểm&lt;/strong&gt;, trong khi &lt;strong&gt;đa luồng&lt;/strong&gt; cho phép phục vụ &lt;strong&gt;nhiều client song song&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Ví dụ:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Khi nhiều người truy cập cùng lúc, mỗi kết nối client được xử lý bởi &lt;strong&gt;một luồng riêng biệt (thread)&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Nhờ đó, các yêu cầu có thể được thực hiện &lt;strong&gt;đồng thời&lt;/strong&gt; mà không bị chặn (blocking).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;2-khái-niệm-về-thread&#34;&gt;2. Khái niệm về Thread&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;Thread (luồng)&lt;/strong&gt; là đơn vị nhỏ nhất của quá trình xử lý trong một chương trình.&lt;br&gt;&#xA;Một chương trình có thể có nhiều luồng chạy &lt;strong&gt;song song (concurrent)&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Bài 6 - Lập trình Client – Server mô hình nhiều tầng (Multi-tier)</title>
      <link>http://localhost:1313/blog/bai-6/</link>
      <pubDate>Mon, 20 Oct 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/bai-6/</guid>
      <description>&lt;h2 id=&#34;1-giới-thiệu-về-mô-hình-nhiều-tầng-multi-tier&#34;&gt;1. Giới thiệu về mô hình nhiều tầng (Multi-tier)&lt;/h2&gt;&#xA;&lt;p&gt;Mô hình &lt;strong&gt;Client-Server nhiều tầng (Multi-tier Architecture)&lt;/strong&gt; là một cách tổ chức hệ thống phần mềm sao cho việc xử lý dữ liệu, giao diện người dùng và truy cập cơ sở dữ liệu được tách biệt thành nhiều tầng độc lập.&lt;br&gt;&#xA;Điều này giúp &lt;strong&gt;dễ bảo trì&lt;/strong&gt;, &lt;strong&gt;mở rộng&lt;/strong&gt;, và &lt;strong&gt;nâng cấp hệ thống&lt;/strong&gt; mà không ảnh hưởng đến toàn bộ chương trình.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Bài 7 - Lập trình HTTP và REST API cơ bản</title>
      <link>http://localhost:1313/blog/bai-7/</link>
      <pubDate>Mon, 20 Oct 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/bai-7/</guid>
      <description>&lt;h2 id=&#34;1-giới-thiệu-về-http-và-rest-api&#34;&gt;1. Giới thiệu về HTTP và REST API&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;HTTP (HyperText Transfer Protocol)&lt;/strong&gt; là giao thức truyền thông được sử dụng phổ biến nhất trên Internet, cho phép client và server trao đổi dữ liệu (văn bản, hình ảnh, JSON, v.v).&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;REST API (Representational State Transfer)&lt;/strong&gt; là một phong cách thiết kế cho phép giao tiếp giữa các hệ thống thông qua giao thức HTTP, thường dùng trong các ứng dụng web và mobile.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Giới thiệu ngôn ngữ Java</title>
      <link>http://localhost:1313/blog/java-gioi-thieu/</link>
      <pubDate>Mon, 20 Oct 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/java-gioi-thieu/</guid>
      <description>&lt;p&gt;Java là một &lt;strong&gt;ngôn ngữ lập trình hướng đối tượng (OOP)&lt;/strong&gt; mạnh mẽ, được phát triển bởi &lt;strong&gt;Sun Microsystems&lt;/strong&gt; (nay thuộc &lt;strong&gt;Oracle&lt;/strong&gt;) vào năm 1995.&lt;br&gt;&#xA;Đây là ngôn ngữ lập trình có khẩu hiệu nổi tiếng:&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;“Write once, run anywhere”&lt;/strong&gt; – Viết một lần, chạy ở mọi nơi.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;1-giới-thiệu-chung&#34;&gt;1. Giới thiệu chung&lt;/h2&gt;&#xA;&lt;p&gt;Java được thiết kế để chạy trên &lt;strong&gt;máy ảo Java (JVM)&lt;/strong&gt;, giúp chương trình có thể hoạt động trên mọi hệ điều hành (Windows, macOS, Linux&amp;hellip;).&lt;br&gt;&#xA;Điều này có nghĩa là chỉ cần bạn biên dịch chương trình Java một lần, bạn có thể chạy nó trên bất kỳ nền tảng nào có cài &lt;strong&gt;Java Runtime Environment (JRE)&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
